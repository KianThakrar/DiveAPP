"""empty message

Revision ID: 9c703b7670e6
Revises: 0ab2ece2dd82
Create Date: 2024-11-25 22:12:14.052538

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9c703b7670e6'
down_revision = '0ab2ece2dd82'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dive_site',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('dive_site', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_dive_site_name'), ['name'], unique=True)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('dive_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('dive_site_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['dive_site_id'], ['dive_site.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('property', schema=None) as batch_op:
        batch_op.drop_index('ix_property_address')

    op.drop_table('property')
    with op.batch_alter_table('landlord', schema=None) as batch_op:
        batch_op.drop_index('ix_landlord_address')
        batch_op.drop_index('ix_landlord_name')

    op.drop_table('landlord')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('landlord',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=500), nullable=True),
    sa.Column('contact_number', sa.VARCHAR(length=20), nullable=True),
    sa.Column('address', sa.VARCHAR(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('landlord', schema=None) as batch_op:
        batch_op.create_index('ix_landlord_name', ['name'], unique=False)
        batch_op.create_index('ix_landlord_address', ['address'], unique=1)

    op.create_table('property',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('address', sa.VARCHAR(length=500), nullable=True),
    sa.Column('start_date', sa.DATETIME(), nullable=True),
    sa.Column('duration', sa.INTEGER(), nullable=True),
    sa.Column('rent', sa.FLOAT(), nullable=True),
    sa.Column('landlord_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['landlord_id'], ['landlord.id'], name='fk_landlord_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('property', schema=None) as batch_op:
        batch_op.create_index('ix_property_address', ['address'], unique=1)

    op.drop_table('dive_event')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))

    op.drop_table('user')
    with op.batch_alter_table('dive_site', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_dive_site_name'))

    op.drop_table('dive_site')
    # ### end Alembic commands ###
